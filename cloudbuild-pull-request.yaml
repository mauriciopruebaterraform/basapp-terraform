steps:
  - name: gcr.io/$PROJECT_ID/docker-compose:$_DOCKER_COMPOSE_VERSION
    id: 'Spin up MySQL db instances'
    args: ['up', '-d', 'mysql']

  - name: node:$_NODE_VERSION
    id: 'Install dependencies'
    entrypoint: npm
    args: ['ci']
    waitFor: ['-']

  - name: node:$_NODE_VERSION
    id: 'Generate prisma types'
    entrypoint: npm
    args: ['run', 'prisma:generate']
    waitFor: ['Install dependencies']

  - name: node:$_NODE_VERSION
    id: 'Run type-check'
    entrypoint: npm
    args: ['run', 'type-check']
    waitFor: ['Generate prisma types']

  - name: node:$_NODE_VERSION
    id: 'Run linter'
    entrypoint: npm
    args: ['run', 'lint:ci']
    waitFor: ['Install dependencies']

  - name: node:$_NODE_VERSION
    id: 'Run unit tests'
    entrypoint: npm
    args: ['run', 'test']
    env:
      - DATABASE_URL=$_TESTING_DATABASE_URL
      - FIREBASE_DATABASE_URL=$_FIREBASE_DATABASE_URL
      - FIREBASE_PROJECT_ID=$_FIREBASE_PROJECT_ID
      - FIREBASE_CLIENT_EMAIL=$_FIREBASE_CLIENT_EMAIL
      - FIREBASE_PRIVATE_KEY=$_FIREBASE_PRIVATE_KEY
      - ALERTA_VECINAL_ID=$_ALERTA_VECINAL_ID
      - ALERTA_EMITIDA_ID=$_ALERTA_EMITIDA_ID
    waitFor: ['Run type-check', 'Run linter']

  - name: node:$_NODE_VERSION
    id: 'Run integration tests'
    entrypoint: bash
    args: ['-c', 'npm run migrations:test && npm run test:e2e']
    env:
      - DATABASE_URL=$_TESTING_DATABASE_URL
      - DATABASE_URL_GIROVISION=$_TESTING_DATABASE_URL_GIROVISION
      - PASSWORD_RESET_EXPIRATION=$_PASSWORD_RESET_EXPIRATION
      - PASSWORD_RESET_URL=$_PASSWORD_RESET_URL
      - SENDGRID_API_KEY=$_SENDGRID_API_KEY
      - SENDGRID_FROM=$_SENDGRID_FROM
      - JWT_EXPIRATION=$_JWT_EXPIRATION
      - JWT_SECRET=$_JWT_SECRET
      - GOOGLE_GEOCODING_API_KEY=$_GOOGLE_GEOCODING_API_KEY
      - FIREBASE_DATABASE_URL=$_FIREBASE_DATABASE_URL
      - FIREBASE_PROJECT_ID=$_FIREBASE_PROJECT_ID
      - FIREBASE_CLIENT_EMAIL=$_FIREBASE_CLIENT_EMAIL
      - FIREBASE_PRIVATE_KEY=$_FIREBASE_PRIVATE_KEY
      - EMITIDO_ID=$_EMITIDO_ID
      - ATENDIDO_ID=$_ATENDIDO_ID
      - ALERTA_VECINAL_ID=$_ALERTA_VECINAL_ID
      - ALERTA_EMITIDA_ID=$_ALERTA_EMITIDA_ID
    waitFor: ['Run unit tests', 'Spin up MySQL db instances']

  - name: gcr.io/$PROJECT_ID/docker-compose:$_DOCKER_COMPOSE_VERSION
    id: 'Stop MySQL database instances'
    args: ['stop', 'mysql']
    waitFor: ['Run integration tests']

options:
  machineType: 'E2_HIGHCPU_8'
timeout: 1100s
